<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">

<html>
  <head>
    <meta name="generator" content=
    "HTML Tidy for Linux/x86 (vers 1st March 2002), see www.w3.org">

    <title>PCI</title>
  </head>

  <body>
    <center>
      <h1>PCI</h1>
    </center>

    <center>
      <h3>the first part of the seventh chapter in our series on <i>How to
      Write an Operating System</i></h3>
    </center>
    <hr>

    <h2>PCI</h2>

    <h3>Overview</h3>
    A friend once said that "hardware engineers live to make software
    engineers lives hell." PCI is on of the exceptions that actually works in
    a usefull manner. In most architecture the PCI bridge handles most
    everything such as Memory Mapped IO, DMA, and I/O ports it you are on a
    PC. All that you don't have to worry too much about except for
    configuring it. 

    <p>PCI, also, provides an intellegent configuration mechanism. Each
    device has either 64 or 256 bytes of configuration space. The 64 bytes
    are a standard header format. The last 192 bytes are left for device
    specific configureation. By the time your OS boot the BIOS/Firmware will
    have set most of the important information such as IRQ and IO address.
    Your OS need only read these values and start using them. Thats right no
    jumpers. No probing. Does it get any better than this?</p>

    <h3>Config Header</h3>

    <table border>
      <tr>
        <td>Index</td>

        <td border="0" width="25%" align="left">31</td>

        <td border="0" width="25%" align="right">16</td>

        <td border="0" width="25%" align="left">15</td>

        <td border="0" width="25%" align="right">0</td>
      </tr>

      <tr>
        <td>0x00</td>

        <td colspan="2">
          <center>
            Device ID
          </center>
        </td>

        <td colspan="2">
          <center>
            Vendor ID
          </center>
        </td>
      </tr>

      <tr>
        <td>0x04</td>

        <td colspan="2">
          <center>
            Status
          </center>
        </td>

        <td colspan="2">
          <center>
            Command
          </center>
        </td>
      </tr>

      <tr>
        <td>0x08</td>

        <td colspan="3">
          <center>
            Class Code
          </center>
        </td>

        <td colspan="1">
          <center>
            Revision
          </center>
        </td>
      </tr>

      <tr>
        <td>0x0c</td>

        <td colspan="1">
          <center>
            Built In Selftest
          </center>
        </td>

        <td colspan="1">
          <center>
            Header
          </center>
        </td>

        <td colspan="1">
          <center>
            Latency
          </center>
        </td>

        <td colspan="1">
          <center>
            Chache Line Size
          </center>
        </td>
      </tr>

      <tr>
        <td>0x10</td>

        <td colspan="4">
          <center>
            Base Address Register 0
          </center>
        </td>
      </tr>

      <tr>
        <td>0x14</td>

        <td colspan="4">
          <center>
            Base Address Register 1
          </center>
        </td>
      </tr>

      <tr>
        <td>0x18</td>

        <td colspan="4">
          <center>
            Base Address Register 2
          </center>
        </td>
      </tr>

      <tr>
        <td>0x1c</td>

        <td colspan="4">
          <center>
            Base Address Register 3
          </center>
        </td>
      </tr>

      <tr>
        <td>0x20</td>

        <td colspan="4">
          <center>
            Base Address Register 4
          </center>
        </td>
      </tr>

      <tr>
        <td>0x24</td>

        <td colspan="4">
          <center>
            Base Address Register 5
          </center>
        </td>
      </tr>

      <tr>
        <td>0x28</td>

        <td colspan="4">
          <center>
            Reserved
          </center>
        </td>
      </tr>

      <tr>
        <td>0x2c</td>

        <td colspan="4">
          <center>
            Reserved
          </center>
        </td>
      </tr>

      <tr>
        <td>0x30</td>

        <td colspan="4">
          <center>
            Expansion Rom Address
          </center>
        </td>
      </tr>

      <tr>
        <td>0x34</td>

        <td colspan="4">
          <center>
            Reserved
          </center>
        </td>
      </tr>

      <tr>
        <td>0x38</td>

        <td colspan="4">
          <center>
            Reserved
          </center>
        </td>
      </tr>

      <tr>
        <td>0x3c</td>

        <td colspan="1">
          <center>
            Max Letency
          </center>
        </td>

        <td colspan="1">
          <center>
            Min Latency
          </center>
        </td>

        <td colspan="1">
          <center>
            Interupt Pin
          </center>
        </td>

        <td colspan="1">
          <center>
            IRQ Line
          </center>
        </td>
      </tr>
    </table>

    <blockquote>
      <dl>
        <dt><b>Vendor ID</b> - 0x00</dt>

        <dd>
          <p>This is an assigned number unique to each PCI vendor. For a
          somewhat complete list of these have a look at Linux's <a href=
          "pci.h">pci.h</a>.</p>
        </dd>

        <dt><b>Device ID</b> - 0x02</dt>

        <dd>
          <p>This is a vendor assigned number specifing which device it is.
          For a somewhat complete list of these have a look at Linux's <a
          href="pci.h">pci.h</a>.</p>
        </dd>

        <dt><b>Command</b> - 0x04</dt>

        <dd>
          <p>This is used to enable vaious types of PCI opperations</p>

          <center>
            <table border>
              <tr>
                <td>15</td>

                <td>14</td>

                <td>13</td>

                <td>12</td>

                <td>11</td>

                <td>10</td>

                <td>9</td>

                <td>8</td>

                <td>7</td>

                <td>6</td>

                <td>5</td>

                <td>4</td>

                <td>3</td>

                <td>2</td>

                <td>1</td>

                <td>0</td>
              </tr>

              <tr>
                <td colspan="6">Reserved</td>

                <td>BBE</td>

                <td>SSE</td>

                <td>WC</td>

                <td>PER</td>

                <td>VPS</td>

                <td>MWI</td>

                <td>SC</td>

                <td>BM</td>

                <td>MA</td>

                <td>IO</td>
              </tr>
            </table>
          </center>

          <table>
            <tr>
              <td valign="top">BBE:</td>

              <td><b>Fast Back-to-back enable</b>. Enables fast back-to-back
              transfers during busmastering. Only enable this if all devices
              on the bus cand do BBE</td>
            </tr>

            <tr>
              <td valign="top">SSE:</td>

              <td><b>System Error Enable</b>. When set to one the devie can
              drive the SERR# line.</td>
            </tr>

            <tr>
              <td valign="top">WC:</td>

              <td><b>Wait Cycle Enable</b>. Controls whether the device does
              address/data steping.</td>
            </tr>

            <tr>
              <td valign="top">PER:</td>

              <td><b>Parity Error Response</b>. When set to one the device
              can report partiy errors.</td>
            </tr>

            <tr>
              <td valign="top">VPS:</td>

              <td><b>VGA Pallette Snoop Enable</b>. Tells the device to
              enable VGA pallet snooping</td>
            </tr>

            <tr>
              <td valign="top">MWI</td>

              <td><b>Memory Write and Invalidate</b>. Enables the device to
              generate memory write and invalidate comamnds. The cache line
              size must be set before this bit is set.</td>
            </tr>

            <tr>
              <td valign="top">SC</td>

              <td><b>Special Cycle Recognition</b>. Enables the device to
              monitor for special cycles on the bus.</td>
            </tr>

            <tr>
              <td valign="top">BM</td>

              <td><b>Bus Maser Enable</b>. Enables the device to become the
              bus master.</td>
            </tr>

            <tr>
              <td valign="top">MA</td>

              <td><b>Memory Access Enable</b>. When enabled the device
              responds to memory requests.</td>
            </tr>

            <tr>
              <td valign="top">IO</td>

              <td><b>I/O Access Enable</b>. When enabled the device responds
              to io requests.</td>
            </tr>
          </table>
        </dd>

        <dt><b>Status</b> - 0x06</dt>

        <dd>
          <center>
            <table border>
              <tr>
                <td>15</td>

                <td>14</td>

                <td>13</td>

                <td>12</td>

                <td>11</td>

                <td>10</td>

                <td>9</td>

                <td>8</td>

                <td>7</td>

                <td>6</td>

                <td>5</td>

                <td>4</td>

                <td>3</td>

                <td>2</td>

                <td>1</td>

                <td>0</td>
              </tr>

              <tr>
                <td>DPE</td>

                <td>SSE</td>

                <td>RMA</td>

                <td>RTA</td>

                <td>STA</td>

                <td colspan="2">DT</td>

                <td>DPR</td>

                <td>FBBC</td>

                <td>UDF</td>

                <td>66</td>

                <td colspan="5">Reserved</td>
              </tr>
            </table>
          </center>

          <table>
            <tr>
              <td valign="top">DPE</td>

              <td><b>Detect Parity Error</b>. Set by device when it has
              detected a parity error</td>
            </tr>

            <tr>
              <td valign="top">SSE</td>

              <td><b>Signalled System Error</b>. Set by device when it has
              driven the SERR# line</td>
            </tr>

            <tr>
              <td valign="top">RMA</td>

              <td><b>Received Master-Abort</b>. Set by master when its
              tranaction is terminated due to a master-abort.</td>
            </tr>

            <tr>
              <td valign="top">RTA</td>

              <td><b>Received Target-Abort</b>. Set by master when its
              tranaction is terminated due to a target-abort.</td>
            </tr>

            <tr>
              <td valign="top">STA</td>

              <td><b>Signalled Target-Abort</b>. Set by target when it
              terminates a tranaction by target-abort.</td>
            </tr>

            <tr>
              <td valign="top">DT</td>

              <td>
                <b>DEVSEL Timing</b>. Read only bits whcih define the slowest
                DEVSEL# timing for the device. 

                <table>
                  <tr>
                    <td>00b</td>

                    <td>= fast</td>
                  </tr>

                  <tr>
                    <td>01b</td>

                    <td>= medium</td>
                  </tr>

                  <tr>
                    <td>10b</td>

                    <td>= slow</td>
                  </tr>

                  <tr>
                    <td>11b</td>

                    <td>= reserved</td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr>
              <td valign="top">DPR</td>

              <td><b>Data Parity Reported</b>. Set by the bus master when the
              reporting bus master was the initator and set the PERR# itself
              or detected it asserted by the target.</td>
            </tr>

            <tr>
              <td valign="top">FBBC</td>

              <td><b>Fast Back-to-Back Capable</b>. Indicates whether the
              device can perform fast back-to-back transfers</td>
            </tr>

            <tr>
              <td valign="top">UDF</td>

              <td><b>UDF Supported</b>. Set if the device supports user
              definable features</td>
            </tr>

            <tr>
              <td valign="top">66</td>

              <td><b>66MHz Capable</b>. Set if device can run at 66MHz.</td>
            </tr>
          </table>
        </dd>

        <dt><b>Revision</b> - 0x08</dt>

        <dd>
          <p>8 bit value indicating the revision of the device.</p>
        </dd>

        <dt><b>Class Code Register</b> - 0x09</dt>

        <dd>
          <p>Specifies which type of device it is. The class code register is
          devied up into 3 8 bit parts: Class Code, Sub-Class Code, and Prog.
          I/F.</p>

          <table>
            <tr>
              <td>23..16</td>

              <td>Class Code</td>
            </tr>

            <tr>
              <td>15..8</td>

              <td>Sub-Class Code</td>
            </tr>

            <tr>
              <td>7..0</td>

              <td>Prog. I/F</td>
            </tr>
          </table>
          <br>
          <br>
           Look at the <a href="7.c.1.html">Class Code Table</a> for a list
          of what these mean.
        </dd>
      </dl>
    </blockquote>

    <h2>Processor Implementations</h2>

    <ul>
      <li><a href="i386/pci.html">i386</a></li>
    </ul>
    <hr>
    <!--#include virtual="/include/footer.html" -->
  </body>
</html>

