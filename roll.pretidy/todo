Caveat section for each page

1. Development environment
   Goal:  be able to run a fully debugged program in protected mode 
  
   - Makefile
   - boot-loader, i386 protected mode (graphical memory map)
   - stacks
   - basic output

1.5: C++ interface, extern "C", objects, etc.

2. Debugging methods
   Goal:  trap an error in a buggy function
 
   - exception handling
   - serial gdb support
   - hardware debug registers
   - Assert() macro

3. Applications and Drivers
   Goal:  kernel loads and runs an unprotected application 
          (single-tasking OS, not unlike DOS)

   - program loading and execution
   - system calls
   - stdlib 
   - inp()/outp()

4. Memory Management 
   (internal and external)
   Goal: 
   - kalloc()/kfree() 
   - physical vs. logical memory and address spaces
   - TLBs and caches

5. Multitasking (also user mode)
   - run multiple applications and context-switch
6. Interprocess Communication
   - synchronization and communication

7. Hardware Interrupts
   - preemptive multitasking, more complex drivers, and nondeterminism
8. Symmetric Multiprocessing Considerations

9. Compatibility
   - VM86 mode, POSIX support, and protocols

