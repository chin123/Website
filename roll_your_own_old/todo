1: Add graphical memory map.
1.5: C++ interface, __pure_virtual, builtin_new, malloc, etc.

Caveat section for each page

protection/VM links abound

hardware debugging (DR0-7)

1. Development environment and the boot loader
   - be able to run a fully debugged program in protected mode 
2. Debugging methods
   - can run a buggy program/budding kernel
3. Separating Kernel and Application (stdlib, system calls, program loading)
   - kernel can load/run unprotected applications (single-tasking OS)
4. Memory Management (internal and external)
   - kalloc()/kfree(), also address space management
5. Multitasking (also user mode)
   - run multiple applications and context-switch
6. Interprocess Communication
   - synchronization and communication
7. Hardware Interrupts and Drivers
   - preemptive multitasking, more complex drivers, and nondeterminism
8. Compatibility
   - VM86 mode, POSIX support, and protocols
